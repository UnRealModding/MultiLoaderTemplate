plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '6.0.+'
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

Project commonProject = parent.project("Common")

apply {
    from file("../gradle/scripts/maven.gradle")
}

minecraft {
    mappings channel: 'official', version: minecraft_version

    runs {
        client {
            workingDirectory project.file('run')
            ideaModule "${parent.name}.${project.name}.main"
            taskName 'Client'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modClientRun {
                    source sourceSets.main
                    source commonProject.sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            ideaModule "${parent.name}.${project.name}.main"
            taskName 'Server'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modServerRun {
                    source sourceSets.main
                    source commonProject.sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            ideaModule "${parent.name}.${project.name}.main"
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            taskName 'Data'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods {
                modDataRun {
                    source sourceSets.main
                    source commonProject.sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    compileOnly commonProject
}

tasks.withType(JavaCompile) {
    source(commonProject.sourceSets.main.allSource)
}

processResources {
    from commonProject.sourceSets.main.resources
}


jar.finalizedBy('reobfJar')
